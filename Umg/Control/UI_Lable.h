#ifndef _UI_Lable_h_
#define _UI_Lable_h_

#include "../UI_Base.h"

// 标签UI
class UI_Lable : public UI_Base {
private:
	SImage* _image;	// 图像
	SText* _text;	// 文本

	// 事件回调指针
	std::function<void(int* _param)> callback_hover;	// 悬停回调
	std::function<void(int* _param)> callback_down;		// 按下回调
	std::function<void(int* _param)> callback_up;		// 放开回调
	std::function<void(int* _param)> callback_click;	// 点击回调

public:
	// 构造
	UI_Lable();

	// 析构
	~UI_Lable();

	// 预释放
	virtual void PreRelease();

	// 创建
	virtual bool Create();

	// 创建图像 
	// 参数：位置和大小
	virtual bool Create(const std::string& filename, int x, int y, int w, int h);

	// 增加静态文本
	virtual void AddStaticText(const std::string& text);

	// 事件驱动
	virtual void CheckEvent(unsigned int* param);

	// 更新
	virtual void Update();

	// 绘制
	virtual void Draw();

	// 设置位置
	virtual void SetLocation(int x, int y);

	// 设置大小
	virtual void SetSize(int w, int h);

	// 设置可见性
	virtual void SetVisiable(bool visible = false);

	// 设置回调 - 悬停
	virtual void Event_Hover(std::function<void(int* _param)> _hover);

	// 设置回调 - 按下
	virtual void Event_Down(std::function<void(int* _param)> _down);

	// 设置回调 - 放开
	virtual void Event_Up(std::function<void(int* _param)> _up);

	// 设置回调 - 点击
	virtual void Event_Click(std::function<void(int* _param)> _hover);
};


#endif //!_UI_Lable_h_